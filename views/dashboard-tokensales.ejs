<!DOCTYPE html>
<html lang="en">

<!-- Mirrored from themesflat.co/html/icolandhtml/dashboard-tokensales.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 16 Jul 2024 06:59:41 GMT -->
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ICOLand | ICO landing page & ICO Crypto HTML Template</title>

    <!-- Styles -->
    <link rel="stylesheet" href="app/dist/app.css">
    <!-- end Styles -->

    <!-- Favicon and Touch Icons  -->
    <link rel="shortcut icon" href="assets/images/logo/favicon.png">
    <link rel="apple-touch-icon-precomposed" href="assets/images/partner/favicon.html">
    <link rel="stylesheet" href="../../../cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"/>
</head>
<body class="dashboard show">
    <script src="https://cdn.jsdelivr.net/npm/web3/dist/web3.min.js"></script>
    <script src="https://unpkg.com/@solana/web3.js@1.32.0/lib/index.iife.js"></script>

    <!-- Preloading -->
    <div class="preloader">
        <div class=" loader">
            <div class="square"></div>
            <div class="path">
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
                <div></div>
            </div>
          <p class="text-load">Loading :</p>
        </div>
    </div> 
    <!-- End Preloading -->

    <!-- MAGIC CURSOR -->
        <div class="mouse-cursor cursor-outer"></div>
        <div class="mouse-cursor cursor-inner"></div>
    <!-- /MAGIC CURSOR -->
    
    <div class="btn click">
        <span class="fas fa-bars"></span>
     </div>
     <nav class="dashboard__sidebar show">
        <div class="sidebar__logo">
            <a href="home-nft.html"><img src="assets/images/logo/logo.png" alt="ICOLand"></a>   
        </div>
        <ul class="sidebar__menu">
           <li class="active"><a href="dashboard-tokensales.html"><span class="icon-token"></span>Token Sales</a></li>
           <li><a href="dashboard-features.html"><span class="icon-menu"></span>Our Feature</a></li>
           <li><a href="dashboard-roadmap.html"><span class="icon-map"></span>Road Map</a></li>
           <li><a href="dashboard-creations.html"><span class="icon-start"></span>Our Creations</a></li>
           <li><a href="dashboard-team.html"><span class="icon-team"></span>Our Team</a></li>
           <li><a href="dashboard-faq.html"><span class="icon-faqs"></span>FaQs</a></li>
           <li>
              <a href="#" class="feat-btn"><span class="icon-setting"></span>Pages
              
              </a>
              <ul class="feat-show">
                 <li><a href="index-2.html">Home Main</a></li>
                 <li><a href="home-nft.html">Home NFT</a></li>
                 <li><a href="home-defi-v1.html">Home Defi</a></li>
                 <li><a href="connect-wallet.html">Wallet Connect</a></li>
                 <li><a href="sign-in.html">Sign In</a></li>
                 <li><a href="sign-up.html">Sign Up</a></li>
                 <li><a href="blog-v1.html">Blog</a></li>
              </ul>
           </li>
           
           
        </ul>

        <div class="bottom">
            <ul class="list-social">
                <li><span class="icon-twitter"></span></li>
                <li><span class="icon-facebook"></span></li>
                <li><span class="icon-place"></span></li>
                <li><span class="icon-youtobe"></span></li>
                <li><span class="icon-tiktok"></span></li>
                <li><span class="icon-reddit"></span></li>
            </ul>
            <p class="fs-14">Â© 2022. All rights reserved by Themesflat</p>
        </div>
     </nav>
     <div class="dashboard__content">
        <div class="overlay"></div>
        <div class="dashboard__header">
            <a href="#" class="user">
                <img src="assets/images/avt/admin.jpg" alt="ICOLand">
            </a>
            <button id="connect-sol" class="btn-action-outline style-5">
                <span class="icon-wallet"></span><span>Wallet connect</span>
              </button>
            <!-- <a href="#" class="btn-action-outline style-5"><span class="icon-wallet"></span><span>Wallet connect</span></a> -->
        </div>
        <div class="dashboard__main">
            <div class="banner">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-xl-6 col-md-12">
                            <div class="block-text">
                                <h2 class="title">WELCOME TO THE ICOLAND NFT CLUB</h2>
                                <p class="desc">ICOLand is a collection of 10,000 Bored Ape NFTs unique digital collectibles living on the Ethereum blockchain.</p>
                            </div>
                            <div class="group-button">
                                <a href="#" class="btn-action style-5"><span>Buy Tokens now</span></a>
                                <a href="#" class="btn-action-outline style-5"><span>White paper</span></a>
                            </div>
    
                            <ul class="content-list">
                                <li>
                                    <div class="number"><h3>01</h3></div>
                                    <h5>+200K</h5>
                                    <p>Current Holders</p>
                                </li>
                                <li>
                                    <div class="number"><h3>02</h3></div>
                                    <h5>+5 mILLION</h5>
                                    <p>cryptoItem</p>
                                </li>
                                <li>
                                    <div class="number"><h3>03</h3></div>
                                    <h5>+500.000 USD</h5>
                                    <p>Total Volume</p>
                                </li>
                            </ul>
                            
                        </div>
                        <div class="col-xl-6 col-md-12">
                            <div class="banner-top__sale">
                                <div class="sale-image">
                                    <img src="assets/images/item/nft-01.png" alt="ICOLand">
                                    <img src="assets/images/item/nft-02.jpg" alt="ICOLand">
                                    <img src="assets/images/item/nft-03.jpg" alt="ICOLand">
                                    <img src="assets/images/item/nft-04.png" alt="ICOLand">
                                    <img src="assets/images/item/nft-05.jpg" alt="ICOLand">
                                    <img src="assets/images/item/nft-06.jpg" alt="ICOLand">
                                </div>
                                <div class="sale-content">
                                    <h5>Token sale End In!</h5>
        
                                    <span class="js-countdown" data-timer="1865550"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
     </div>

     <!-- <div id="react-root"></div> -->


     <script>
        // Ethereum interaction
        let web3;
        let ethAccount;

         // Solana interaction
         let solConnection;
        let solAccount;

        document.getElementById('connect-sol').addEventListener('click', async () => {
            solConnection = new solanaWeb3.Connection(solanaWeb3.clusterApiUrl('mainnet-beta'), 'confirmed');
            window.solana.on('connect',async (publicKey) => {
                solAccount = publicKey;
                alert('Solana wallet connected: ' + solAccount.toString());
                // Call the POST API after connecting the wallet
                const response = await fetch('https://nftbackend-2dcc1ef42a06.herokuapp.com/api/transaction-history', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ walletAddress: solAccount.toString() })
                });
                const data = await response.json();
                console.log("data--",data);

                // Pass the API response data to another rendered page
                sessionStorage.setItem('nftMetadata', JSON.stringify(data));
                window.location.href = 'dashboard-creations';
            });
            await window.solana.connect();
        });

        // document.getElementById('connect-eth').addEventListener('click', async () => {
        //     if (window.ethereum) {
        //         web3 = new Web3(window.ethereum);
        //         console.log(web3);
        //         try {
        //             await window.ethereum.enable();
        //             const accounts = await web3.eth.getAccounts();
        //             ethAccount = accounts[0];
        //             alert('Ethereum wallet connected: ' + ethAccount);
        //             // Call the POST API after connecting the wallet
        //             const response = await fetch('http://localhost:3003/api/transaction-history', {
        //                 method: 'POST',
        //                 headers: {
        //                     'Content-Type': 'application/json'
        //                 },
        //                 body: JSON.stringify({ walletAddress: ethAccount })
        //             });
        //             const data = await response.json();

        //             // Pass the API response data to another rendered page
        //             sessionStorage.setItem('nftMetadata', JSON.stringify(data));
        //             window.location.href = 'dashboard-creations';
                
        //         } catch (error) {
        //             console.error(error);
        //         }
        //     } else {
        //         alert('Please install MetaMask!');
        //     }
        // });

        // document.getElementById('lock-eth').addEventListener('click', async () => {
        //     const amount = document.getElementById('eth-amount').value;
        //     const contractAddress = '0xYourWormholeContractAddress';
        //     const abi = [ /* Your contract ABI */ ];

        //     const contract = new web3.eth.Contract(abi, contractAddress);

        //     try {
        //         await contract.methods.lockTokens(web3.utils.toWei(amount, 'ether')).send({ from: ethAccount });
        //         alert('Tokens locked on Ethereum');
        //     } catch (error) {
        //         console.error(error);
        //     }
        // });

        document.getElementById('unlock-sol').addEventListener('click', async () => {
            const amount = document.getElementById('sol-amount').value;
            const contractPublicKey = new solanaWeb3.PublicKey('YourSolanaProgramID');

            const transaction = new solanaWeb3.Transaction().add(
                solanaWeb3.SystemProgram.transfer({
                    fromPubkey: solAccount,
                    toPubkey: contractPublicKey,
                    lamports: amount * solanaWeb3.LAMPORTS_PER_SOL,
                })
            );

            try {
                const { blockhash } = await solConnection.getRecentBlockhash();
                transaction.recentBlockhash = blockhash;
                transaction.feePayer = solAccount;

                const signedTransaction = await window.solana.signTransaction(transaction);
                const signature = await solConnection.sendRawTransaction(signedTransaction.serialize());
                await solConnection.confirmTransaction(signature);

                alert('Tokens unlocked on Solana');
            } catch (error) {
                console.error(error);
            }
        });
    </script>

    <script src="app/js/jquery.min.js"></script>
    <script src="app/js/count-down.js"></script>
    <script src="app/js/app.js"></script>


    <script src="app/js/mouse.js"></script>
    <script src="https://unpkg.com/@solana/web3.js@1.32.0/lib/index.iife.js"></script>



    <!-- <script src="https://unpkg.com/react/umd/react.production.min.js"></script>
    <script src="https://unpkg.com/react-dom/umd/react-dom.production.min.js"></script>
    <script src="https://unpkg.com/@babel/standalone/babel.min.js"></script>

    <script type="text/babel">
        // Import the React component
        const Home = () => {
            const { useMemo } = React;
            const { ConnectionProvider, WalletProvider } = walletAdapterReact;
            const endpoint = web3.clusterApiUrl("devnet");
            const wallets = useMemo(() => [], []);

            return (
                <ConnectionProvider endpoint={endpoint}>
                    <WalletProvider wallets={wallets}>
                        <p>Put the rest of your app here</p>
                    </WalletProvider>
                </ConnectionProvider>
            );
        };

        // Render the React component after the button click
        document.getElementById('connect-sol').addEventListener('click', () => {
            ReactDOM.render(<Home />, document.getElementById('react-root'));
        });
    </script> -->

</body>

<!-- Mirrored from themesflat.co/html/icolandhtml/dashboard-tokensales.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 16 Jul 2024 06:59:50 GMT -->
</html>
